{"version":3,"sources":["components/SearchBox.js","components/Nav.js","components/DataBody.js","components/DataTable.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","index.js"],"names":["SearchBox","className","type","onChange","this","handleSearchChange","placeholder","Component","Nav","id","DataBody","props","console","log","employees","map","employee","key","alt","name","src","picture","thumbnail","first","last","phone","email","dob","date","DataTable","handleSort","scope","onClick","axios","get","DataArea","state","search","filteredEmployees","error","getEmployees","API","then","res","setState","data","results","catch","err","event","target","value","Main","Wrapper","Header","App","ReactDOM","render","document","getElementById"],"mappings":"wbA2CeA,G,6KAfP,OAEI,8BACI,+BACI,yBAAKC,UAAU,aAEX,2BAAOC,KAAK,OAAQC,SAAUC,KAAKC,mBAAoBC,YAAY,4B,GAdnEC,c,MCPTC,MATf,YAAsC,IAAvBH,EAAsB,EAAtBA,mBACX,OACI,yBAAKJ,UAAU,8CACX,yBAAKA,UAAU,sBAAsBQ,GAAG,aACpC,kBAAC,EAAD,CAAWJ,mBAAoBA,O,MCahCK,MAjBf,SAAkBC,GAEd,OADAC,QAAQC,IAAIF,GAER,+BACIA,EAAMG,UAAUC,KAAI,SAAAC,GAAQ,OACxB,4BACA,wBAAIC,IAAKD,EAASP,IAAlB,IAAuB,yBAAKS,IAAKF,EAASG,KAAMC,IAAKJ,EAASK,QAAQC,aACtE,4BAAKN,EAASG,KAAKI,MAAO,IAAKP,EAASG,KAAKK,MAC7C,4BAAKR,EAASS,OACd,4BAAKT,EAASU,OACd,4BAAKV,EAASW,IAAIC,Y,MCSnBC,MAjBf,YAA8C,IAAzBf,EAAwB,EAAxBA,UAAWgB,EAAa,EAAbA,WAC5B,OACI,2BAAO7B,UAAU,SACjB,2BAAOA,UAAU,cACb,4BACK,wBAAI8B,MAAM,OAAV,SACA,wBAAIC,QAAS,kBAAMF,KAAcC,MAAM,OAAvC,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SAGT,kBAAC,EAAD,CAAUjB,UAAWA,M,iBCZd,EACL,WACN,OAAOmB,IAAMC,IAND,0CCIKC,G,kNAEjBC,MAAQ,CACJC,OAAQ,GACRvB,UAAW,GACXwB,kBAAmB,GACnBC,MAAO,I,EAOXC,aAAe,WACXC,IACKC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAE9B,UAAW6B,EAAIE,KAAKC,QAASR,kBAAmBK,EAAIE,KAAKC,aAE5EC,OAAM,SAAAC,GAAG,OAAIpC,QAAQC,IAAImC,O,EAGlC3C,mBAAqB,SAAA4C,GAGjB,IAAIX,EAAoBW,EAAMC,OAAOZ,kBACrC,EAAKM,SAAS,CAAEP,OAAQY,EAAMC,OAAOC,MAAOb,kBAAmBA,K,EAOnER,WAAa,SAAAmB,GAAU,IAAD,EAEIA,EAAMC,OAArB/B,EAFW,EAEXA,KAAMgC,EAFK,EAELA,MACb,EAAKP,SAAL,eAAgBzB,EAAOgC,K,kEAzBvB/C,KAAKoC,iB,+BAiDL,OACI,oCACI,kBAAC,EAAD,CAAKnC,mBAAoBD,KAAKC,qBAC9B,yBAAKJ,UAAU,aACX,kBAAC,EAAD,CACIa,UAAWV,KAAKgC,MAAME,kBACtBR,WAAY1B,KAAK0B,mB,GAjEHvB,cCDjB6C,G,6KAEb,OACI,oCACA,kBAAC,EAAD,W,GAJsB7C,cCCnB8C,MAJf,SAAiB1C,GACf,OAAO,wCAAMV,UAAU,WAAcU,K,MCSxB2C,MATf,WACI,OACI,yBAAKrD,UAAU,UACX,kDACA,qH,MC4BGsD,MAXf,WACE,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCxBRuD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1c117f1b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/SearchBox.css\";\n\n// should this be a stateless function, instead of a stateful class?\n\n// function SearchBox(props) {\n//     return (\n//         <form>\n//             <label>\n//                 <div className=\"col-sm-12\">\n\n//                     <input type=\"text\" onChange={props.handleSearchChange} placeholder=\"Search Employees\"></input>\n//                 </div>\n//             </label>\n\n//         </form>\n//     );\n// }\n// export default SearchBox;\n\nclass SearchBox extends Component {\n\n    // Do I need to setup state here again? I was thinking it would be passed via props\n    // I was also thinking I needed a handleSubmit prop; however, I am only searching\n    // <form onSubmit={this.handleSubmit}>\n\n\n    render() {\n        return (\n\n            <form>\n                <label>\n                    <div className=\"col-sm-12\">\n\n                        <input type=\"text\"  onChange={this.handleSearchChange} placeholder=\"Search Employees\"></input>\n                    </div>\n                </label>\n\n            </form>\n\n        );\n    }\n}\nexport default SearchBox;","import React from \"react\";\nimport SearchBox from \"./SearchBox.js\";\nimport \"../styles/Nav.css\";\n\nfunction Nav({ handleSearchChange }) {\n    return (\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\n            <div className=\"navbar-collapse row\" id=\"navbarNav\">\n                <SearchBox handleSearchChange={handleSearchChange} />\n            </div>\n        </nav>\n    );\n}\nexport default Nav;","import React from \"react\";\nimport \"../styles/DataBody.css\";\n\n\nfunction DataBody(props) {\n    console.log(props);\n    return (\n        <tbody>\n           {props.employees.map(employee =>(\n                <tr>\n                <td key={employee.id}> <img alt={employee.name} src={employee.picture.thumbnail}></img></td>\n                <td>{employee.name.first}{\" \"}{employee.name.last}</td>\n                <td>{employee.phone}</td>\n                <td>{employee.email}</td>\n                <td>{employee.dob.date}</td>\n\n            </tr>\n            ))}\n        </tbody>\n    )\n}\nexport default DataBody;","import React from \"react\";\nimport DataBody from \"./DataBody.js\";\nimport \"../styles/DataTable.css\";\n\n\n\nfunction DataTable({ employees, handleSort}) {\n    return (\n        <table className=\"table\">\n        <thead className=\"thead-dark\">\n            <tr>\n                 <th scope=\"col\">Image</th>\n                 <th onClick={() => handleSort()} scope=\"col\">Name</th>\n                 <th scope=\"col\">Phone</th>\n                 <th scope=\"col\">Email</th>\n                 <th scope=\"col\">DOB</th>\n            </tr>\n         </thead>\n        <DataBody employees={employees}/>\n        </table>\n    );\n}\n\nexport default DataTable;","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=10\";\n// const APIKEY = \"&api_key=dc6zaTOxFJmzC&limit=20\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};\n","import React, { Component } from \"react\";\nimport Nav from \"./Nav\";\nimport DataTable from \"./DataTable\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\n\nexport default class DataArea extends Component {\n\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmployees: [],\n        error: \"\"\n    };\n\n    componentDidMount() {\n        this.getEmployees();\n    }\n\n    getEmployees = () => {\n        API.search()\n            .then(res => {\n                this.setState({ employees: res.data.results, filteredEmployees: res.data.results })\n            })\n            .catch(err => console.log(err));\n    };\n\n    handleSearchChange = event => {\n        // From this.state.employees and event.target.value, generate filteredEmployees\n        // Save it with setState into this.state.filteredEmployees\n        let filteredEmployees = event.target.filteredEmployees\n        this.setState({ search: event.target.value, filteredEmployees: filteredEmployees });\n    }\n    // handleSearchChange = event => {\n    //     const {name, value} = event.target;\n    //     this.setState({[name]: value});\n    // }\n\n    handleSort = event => {\n         \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    }\n    \n    \n    // handleSort = event => {\n    //     const employees = this.state.employees.filter(name => !name.name);\n    //     this.setState({ employees });\n    // };\n    \n    // handleSort = function (a, b){ \n    \n    //     const sorting = this.state.employees.filter(employee => a.employee.name.toLowerCase().localeCompare(b.employee.name.toLowerCase())\n    // }\n        \n        // this.setState({\n        //     employees: results.data.results,\n        //     filteredEmployees: results.data.results\n        // });\n    \n        // handleSubmit(event) => {\n\n        // }\n\n    render() {\n        return (\n            <>\n                <Nav handleSearchChange={this.handleSearchChange} />\n                <div className=\"data-area\">\n                    <DataTable\n                        employees={this.state.filteredEmployees}\n                        handleSort={this.handleSort}\n                    />\n                </div>\n            </>\n        );\n\n    }\n}\n\n","import React, {Component} from \"react\";\nimport DataArea from \"./DataArea\";\nimport \"../styles/Main.css\";\n\n// can also do function Main () {}\nexport default class Main extends Component {\n    render () {\n        return (\n            <>\n            <DataArea />\n            </>\n        );\n    }\n}","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <h1>Employee Directory</h1>\n            <p>Click on carrots to filter by heading, or use the search box to narrow your results.</p>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\n\n// Functional components are also known as dumb components or stateless components\n  // They don't do anything except return jsx\n  // Written like a normal function:\n  //function App() {}\n  // or const App = function() {} (ES6: const App = () => {})\n\n// Class components are also known as stateful components\n// They manage state\n// Written like class App extends React.Component {}\n// They render a return of JSX\n// So at the bottom of your class component should be\n// render() {\n  // return (\n    // jsx here\n  //)\n//}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}